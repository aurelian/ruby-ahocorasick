h1. This is a work in progress.


h2. Introduction

This library is a "Ruby":http://ruby-lang.org extension, a wrapper around the "Aho-Corasick":http://en.wikipedia.org/wiki/Aho-Corasick_algorithm implementation in C, found in "Strmat":http://www.cs.ucdavis.edu/~gusfield/strmat.html package.

The source code (ac.c and ac.h) was "adapted" from Strmat. In fact, I've changed only 3-4 lines of code from the original implementation so it will feat my needs: search needed to return the current position in the searched string.


h2. Okay, so what's the idea?

Having a dictionary of known sentences (note: not *words*!), this kick ass algorithm can find individual patterns in an incoming stream of data. Kinda Fast.

The algorithm has 2 stages: one where an internal tree in being build from the given dictionary leaving the search to the second step.


h2. Okay, so where can I use this?

Well, you can do some crazy things with it, like, you can lookup for DNA patterns or maybe analyze network sequences (read: strange and maybe proprietary network protocols), or domestic stuff like building contextual links on your blog posts to enrich your users experience.


h2. Okay, so how can I install it?


h3. Rubygems - Development Version

<pre>
gem install aurelian-ruby-ahocorasick --source=http://gems.github.com
</pre>


h3. Build it from source

<pre>
$ git clone git://github.com/aurelian/ruby-ahocorasick.git
$ cd ruby-ahocorasick
</pre>

To build and install the gem on your machine (run with sudo if needed):

<pre>
$ rake install
</pre>

@rake -T@ will list other cool tasks.


h3. Rubygems - Stable Version

Get version 0.4.5 (released on 19 November 2008) from "rubyforge":http://rubyforge.org/frs/?group_id=4024&release_id=28421 :

<pre>
$ gem install ruby-ahocorasick
</pre>


h4. Notes

It's known to work / compile / install on Ubuntu 8.04 and Mac OS 10.4.*. It should work out of the box if you have gcc around.
Unfortunately I don't have a Windows PC around nor required knowledge about Microsoft compliers.


h2. Okay, so how do I use it?

<pre>
  require 'ahocorasick'

  keyword_tree= AhoCorasick::KeywordTree.new # creates a new tree
  keyword_tree.add_string( "foo-- Z@!bar" ) # add's a keyword to the tree
  keyword_tree.add_string( "cervantes" )    # even more

  results= keyword_tree.find_all( "1011000129 foo-- Z@!bar761 ! 001211 6xU" ).each do | result |
    result[:value]     # => "foo-- Z@!bar"
    result[:starts_at] # => 11
    result[:ends_at]   # => 23
    result[:id]        # => 1
  end

</pre>

You can get some API reference on the "wiki":http://github.com/aurelian/ruby-ahocorasick/wikis.


h2. Bugs? Suggestions? Ideas? Patches?

For now, just use the email address.


h2. Additional Reading 

Other suffix - tree implementations:

 * "Strmat":http://www.cs.ucdavis.edu/~gusfield/strmat.html
 * "Pytst":http://nicolas.lehuen.com/download/pytst / "Ruby-Pytst":http://rubyforge.org/projects/ruby-pytst/
 * "Aho-Corasick extension":http://hkn.eecs.berkeley.edu/~dyoo/python/ahocorasick/
 * "Keyword Prospector":http://latimes.rubyforge.org/keyword_prospector/rdoc/
 * "libstree":http://www.cl.cam.ac.uk/~cpk25/libstree/


h2. License

(c) 2008 - Aurelian Oancea, < oancea at gmail dot com > 

released under MIT-LICENCE